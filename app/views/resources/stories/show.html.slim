h2 = @story.title

.row
  .col-md-6
    = link_to @story.url do
      = truncate pretty_print_url(@story.url), length: 50
    p
      small.text-muted
        |Submitted by #{link_to @story.user.name, user_path(@story.user)} on #{l @story.created_at, format: :long}
    p
      - @story.tags.each do |tag|
        span.label.label-default<> = tag.name
    p
      - if @story.liked_by?(current_user)
        a> href='#{toggle_like_resources_story_path(@story)}' title='Unlike story' data-method='post'
          i.fa.fa-fw.fa-heart
      - else
        a> href='#{toggle_like_resources_story_path(@story)}' title='Like story' data-method='post'
          i.fa.fa-fw.fa-heart-o
      | Liked by #{@story.liked_by.map(&:name).to_sentence}
    - if can?(:edit, @story)
      p
        = link_to [:edit, @story], class: 'btn btn-secondary btn-xs' do
          i.fa.fa-fw.fa-edit>
          | Edit
        - if can?(:destroy, @story)
            = ' '
            = link_to @story, class: 'btn btn-danger btn-xs', data: { method: :delete, confirm: "Really delete? That can't be undone" } do
              i.fa.fa-fw.fa-trash-o>
              | Delete

  .col-md-6
    - if @story.image.present?
      = image_tag @story.image.url(:medium)
br
.entry-content = markdown @story.description


br
- if @story.comments.blank?
  p: i No comments yet.

- else
  = render @story.comments.order('created_at asc')

- if can? :create, Resources::Comment
  br
  br
  h5: small Comment that resource
  p How did you like the linked resource? Any experience for your learning?
  - comment = @comment || Resources::Comment.new
  = simple_form_for [ @story, comment], url: resources_story_comments_path(@story) do |f|
    = f.input :comment, hint: "Markdown enabled", label: false
    = f.submit "Send", class: 'btn btn-primary'
